FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
smallpoxdf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
smallpox_umap <- umap(smallpoxdf, n_components = 2)
smallpox_umap_df <- data.frame(smallpox_umap$layout)
names(smallpox_umap_df) <- paste0("X",1:ncol(smallpox_umap_df))
smallpox_umap_df$type <- DISEASE_KEY
smallpox_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
# smallpox_umap_df = smallpox_umap_df[!screen_mahalanobis_outliers(smallpox_umap_df, threshold = 0.9),]
######################
## Load Chikungunya
DISEASE_KEY = 'Chikungunya'
### demonstrating using Chikungunya
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
chikungunyadf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
chikungunya_umap <- umap(chikungunyadf, n_components = 2)
chikungunya_umap_df <- data.frame(chikungunya_umap$layout)
names(chikungunya_umap_df) <- paste0("X",1:ncol(chikungunya_umap_df))
chikungunya_umap_df$type <- DISEASE_KEY
chikungunya_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
# chikungunya_umap_df = chikungunya_umap_df[!screen_mahalanobis_outliers(chikungunya_umap_df, threshold = 0.9),]
######################
## Load Diphtheria
DISEASE_KEY = 'Diphtheria'
### demonstrating using Diphtheria
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
diphtheriadf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
diphtheria_umap <- umap(diphtheriadf, n_components = 2)
diphtheria_umap_df <- data.frame(diphtheria_umap$layout)
names(diphtheria_umap_df) <- paste0("X",1:ncol(diphtheria_umap_df))
diphtheria_umap_df$type <- DISEASE_KEY
diphtheria_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
# diphtheria_umap_df = diphtheria_umap_df[!screen_mahalanobis_outliers(diphtheria_umap_df, threshold = 0.9),]
######################
## Load Polio
DISEASE_KEY = 'Polio'
### demonstrating using Polio
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
poliodf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
polio_umap <- umap(poliodf, n_components = 2)
polio_umap_df <- data.frame(polio_umap$layout)
names(polio_umap_df) <- paste0("X",1:ncol(polio_umap_df))
polio_umap_df$type <- DISEASE_KEY
polio_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
# polio_umap_df = polio_umap_df[!screen_mahalanobis_outliers(polio_umap_df, threshold = 0.9),]
######################
## Load Mumps
DISEASE_KEY = 'Mumps'
### demonstrating using Mumps
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
mumpsdf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
mumps_umap <- umap(mumpsdf, n_components = 2)
mumps_umap_df <- data.frame(mumps_umap$layout)
names(mumps_umap_df) <- paste0("X",1:ncol(mumps_umap_df))
mumps_umap_df$type <- "Mumps"
mumps_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
# mumps_umap_df = mumps_umap_df[!screen_mahalanobis_outliers(mumps_umap_df, threshold = 0.9),]
######################
## Load Dengue
DISEASE_KEY = 'Dengue'
### demonstrating using Dengue
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
denguedf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
dengue_umap <- umap(denguedf, n_components = 2)
dengue_umap_df <- data.frame(dengue_umap$layout)
names(dengue_umap_df) <- paste0("X",1:ncol(dengue_umap_df))
dengue_umap_df$type <- "Dengue"
dengue_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
# dengue_umap_df = dengue_umap_df[!screen_mahalanobis_outliers(dengue_umap_df, threshold = 0.9),]
######################
# Let's do the plots:
## plot synthetic on top of real
patall <- grid.arrange(
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type != "Synthetic"), color = I('#d95f02'))+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Global COVID-19")+
xlim(range(global_covid_umap_df$X1))+
ylim(range(global_covid_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type != "Synthetic"), color = I('#66a61e'))+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("US COVID-19")+
xlim(range(dengue_umap_df$X1))+
ylim(range(dengue_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type != "Synthetic"), color = I('#7570b3'))+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("ILI")+
xlim(range(ili_umap_df$X1))+
ylim(range(ili_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Rubella")+
xlim(range(rubella_umap_df$X1))+
ylim(range(rubella_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Diphtheria")+
xlim(range(diphtheria_umap_df$X1))+
ylim(range(diphtheria_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Measles")+
xlim(range(measles_umap_df$X1))+
ylim(range(measles_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Mumps")+
xlim(range(mumps_umap_df$X1))+
ylim(range(mumps_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Polio")+
xlim(range(polio_umap_df$X1))+
ylim(range(polio_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Smallpox")+
xlim(range(smallpox_umap_df$X1))+
ylim(range(smallpox_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type != "Synthetic"), color = I('#e7298a'))+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Chikungunya")+
xlim(range(chikungunya_umap_df$X1))+
ylim(range(chikungunya_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),ncol=1, top=textGrob("UMAP: Synthetic over Real"),
layout_matrix = matrix(1:10, nrow = 5, ncol = 2))
tapall <- grid.arrange(
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type != "Synthetic"), color = I('#d95f02'))+
ggtitle("Global COVID-19")+
xlim(range(global_covid_umap_df$X1))+
ylim(range(global_covid_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type != "Synthetic"), color = I('#66a61e'))+
ggtitle("US COVID-19")+
xlim(range(dengue_umap_df$X1))+
ylim(range(dengue_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type != "Synthetic"), color = I('#7570b3'))+
ggtitle("ILI")+
xlim(range(ili_umap_df$X1))+
ylim(range(ili_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Rubella")+
xlim(range(rubella_umap_df$X1))+
ylim(range(rubella_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Diphtheria")+
xlim(range(diphtheria_umap_df$X1))+
ylim(range(diphtheria_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Measles")+
xlim(range(measles_umap_df$X1))+
ylim(range(measles_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Mumps")+
xlim(range(mumps_umap_df$X1))+
ylim(range(mumps_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Polio")+
xlim(range(polio_umap_df$X1))+
ylim(range(polio_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Smallpox")+
xlim(range(smallpox_umap_df$X1))+
ylim(range(smallpox_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type != "Synthetic"), color = I('#e7298a'))+
ggtitle("Chikungunya")+
xlim(range(chikungunya_umap_df$X1))+
ylim(range(chikungunya_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),ncol=1, top=textGrob("UMAP: Synthetic over Real"),
layout_matrix = matrix(1:10, nrow = 5, ncol = 2))
######################
## Load Chikungunya
DISEASE_KEY = 'Chikungunya'
### demonstrating using Chikungunya
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.99)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
train_disease_data
nrow(train_disease_data)
nrow(train_sim_data)
######################
## Load Chikungunya
DISEASE_KEY = 'Chikungunya'
### demonstrating using Chikungunya
output_list = readRDS(paste0(savepath,FILES[grepl(DISEASE_KEY,FILES, ignore.case = T)]))
### organize features
FEATURE_LIST = setdiff(names(output_list['features']$features),c('geography','disease','last_obs_time','h'))
features_wide = output_list['features']$features
train_disease_data = features_wide %>%
dplyr::filter(h==1) %>%
dplyr::select(gr12_div_23, last_div_max, coefvar,
gam_with_div_without, avg_recent_div_avg_global,
diff_zscore, entropy, relative_increases,
prop_since_peak, seasonality)
train_disease_data = screen_multivariate_outliers(train_disease_data, threshold = 0.9)
if(nrow(train_disease_data) > nsample){
set.seed(9878)
train_disease_data <- train_disease_data[sample(1:nrow(train_disease_data), nsample, replace = F),]
}
## combine with synthetic
chikungunyadf <- as.matrix(rbind(train_sim_data, train_disease_data))
## fit UMAP (2-dimensions)
set.seed(1128)
chikungunya_umap <- umap(chikungunyadf, n_components = 2)
chikungunya_umap_df <- data.frame(chikungunya_umap$layout)
names(chikungunya_umap_df) <- paste0("X",1:ncol(chikungunya_umap_df))
chikungunya_umap_df$type <- DISEASE_KEY
chikungunya_umap_df[1:nrow(train_sim_data),]$type <- "Synthetic"
######################
# Let's do the plots:
## plot synthetic on top of real
patall <- grid.arrange(
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type != "Synthetic"), color = I('#d95f02'))+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Global COVID-19")+
xlim(range(global_covid_umap_df$X1))+
ylim(range(global_covid_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type != "Synthetic"), color = I('#66a61e'))+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("US COVID-19")+
xlim(range(dengue_umap_df$X1))+
ylim(range(dengue_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type != "Synthetic"), color = I('#7570b3'))+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("ILI")+
xlim(range(ili_umap_df$X1))+
ylim(range(ili_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Rubella")+
xlim(range(rubella_umap_df$X1))+
ylim(range(rubella_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Diphtheria")+
xlim(range(diphtheria_umap_df$X1))+
ylim(range(diphtheria_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Measles")+
xlim(range(measles_umap_df$X1))+
ylim(range(measles_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Mumps")+
xlim(range(mumps_umap_df$X1))+
ylim(range(mumps_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Polio")+
xlim(range(polio_umap_df$X1))+
ylim(range(polio_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Smallpox")+
xlim(range(smallpox_umap_df$X1))+
ylim(range(smallpox_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type != "Synthetic"), color = I('#e7298a'))+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type == "Synthetic"), color = I("black"))+
ggtitle("Chikungunya")+
xlim(range(chikungunya_umap_df$X1))+
ylim(range(chikungunya_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),ncol=1, top=textGrob("UMAP: Synthetic over Real"),
layout_matrix = matrix(1:10, nrow = 5, ncol = 2))
tapall <- grid.arrange(
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(global_covid_umap_df, type != "Synthetic"), color = I('#d95f02'))+
ggtitle("Global COVID-19")+
xlim(range(global_covid_umap_df$X1))+
ylim(range(global_covid_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(us_covid_umap_df, type != "Synthetic"), color = I('#66a61e'))+
ggtitle("US COVID-19")+
xlim(range(dengue_umap_df$X1))+
ylim(range(dengue_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(ili_umap_df, type != "Synthetic"), color = I('#7570b3'))+
ggtitle("ILI")+
xlim(range(ili_umap_df$X1))+
ylim(range(ili_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(rubella_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Rubella")+
xlim(range(rubella_umap_df$X1))+
ylim(range(rubella_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(diphtheria_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Diphtheria")+
xlim(range(diphtheria_umap_df$X1))+
ylim(range(diphtheria_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(measles_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Measles")+
xlim(range(measles_umap_df$X1))+
ylim(range(measles_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(mumps_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Mumps")+
xlim(range(mumps_umap_df$X1))+
ylim(range(mumps_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(polio_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Polio")+
xlim(range(polio_umap_df$X1))+
ylim(range(polio_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(smallpox_umap_df, type != "Synthetic"), color = I('#e6ab02'))+
ggtitle("Smallpox")+
xlim(range(smallpox_umap_df$X1))+
ylim(range(smallpox_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),
ggplot()+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type == "Synthetic"), color = I("black"))+
geom_point(aes(x=X1, y=X2), data=subset(chikungunya_umap_df, type != "Synthetic"), color = I('#e7298a'))+
ggtitle("Chikungunya")+
xlim(range(chikungunya_umap_df$X1))+
ylim(range(chikungunya_umap_df$X2)) +
theme(plot.title = element_text(hjust = 0.5)),ncol=1, top=textGrob("UMAP: Synthetic over Real"),
layout_matrix = matrix(1:10, nrow = 5, ncol = 2))
